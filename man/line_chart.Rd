% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/line_chart.R
\name{line_chart}
\alias{line_chart}
\title{Line_chart}
\usage{
line_chart(
  df,
  base = NULL,
  x = NULL,
  y = NULL,
  group_var = NULL,
  line_colour = c("#003b49"),
  error_colour = c("#f2c75c"),
  ci = NULL,
  lower = NULL,
  upper = NULL,
  y_axis = "y1",
  h_line = NULL,
  line_type = "solid",
  add_points = NULL,
  line_size = 1,
  x_label = NULL,
  y_label = NULL,
  x_label_angle = NULL,
  y_label_angle = NULL,
  x_labels_reverse = NULL,
  y_min_limit = NULL,
  y_max_limit = NULL,
  x_axis_breaks = NULL,
  legend_pos = "bottom",
  remove_gridlines = NULL,
  percent = NULL,
  cap_text = NULL,
  no_shift = FALSE
)
}
\arguments{
\item{df}{name of data frame for plotting}

\item{base}{a ggplot instance or NULL if creating a new plot}

\item{x}{name of x axis variable in data frame}

\item{y}{name of y axis variable in data frame}

\item{group_var}{name of group variable to generate multiple lines
(if required) in data frame}

\item{line_colour}{colour (or vector of colours if group_var != NULL) for
the line in the chart}

\item{error_colour}{if ci != NULL - colour (or vector of colours if group_var
!= NULL) for the error bar or ribbon in the chart}

\item{ci}{"e" for error bars or "ribbon" for a ribbon - lower and upper become
mandatory if ci != NULL}

\item{lower}{lower value for error \ ribbon geom (mandatory if ci argument passed)}

\item{upper}{upper value for error \ ribbon geom (mandatory if ci argument passed)}

\item{y_axis}{y axis to use - y1 or y2 (default is y1 - standard left-hand axis,
y2 can be used for dual-axis graphs)}

\item{h_line}{will display a horizontal line if valid inter passed}

\item{line_type}{if provided will change all lines used to that type i.e.
dotted, dashed, default sitting is solid, when not
provided where multiple lines generated each will be of different type}

\item{add_points}{will simply add points to all lines generated}

\item{line_size}{will alter line width accordingly for all lines generated,
defaults to 1}

\item{x_label}{for provision of an x axis label}

\item{y_label}{for provision of an y axis label}

\item{x_label_angle}{to adjust the x axis label by the degrees of the integer
provided}

\item{y_label_angle}{to adjust the y axis label by the degrees of the integer
provided}

\item{x_labels_reverse}{enter an argument of any value i.e. 'y' to reverse
the x labeling order when using categorical data}

\item{y_min_limit}{set the limit on the y axis scaling by proving an integer}

\item{y_max_limit}{set the limit on the x axis scaling by proving an integer}

\item{x_axis_breaks}{modify the x axis breaks by providing an integer}

\item{legend_pos}{modify the position of the legend (where applicable) with
appropriate value i.e. bottom (default position),
top, right, left}

\item{remove_gridlines}{enter an argument of any value i.e. 'y' to remove the
grid lines}

\item{percent}{enter an argument of any value i.e. 'y' to include the \%
symbol for y axis labels}

\item{cap_text}{enter text for a caption to appear below plot}

\item{no_shift}{If no shift should be applied to the secondary y-axis}
}
\value{
the final plot
}
\description{
The chart function has 3 mandatory arguments to plot, with additional
arguments as described further below:
}
\details{
data frame
x axis variable name
y axis variable name
}
\examples{

# Examples are provided below for using this function that utilise the in-built
# DataVis package dummy data to produce various visualisations, using different
# data frames and arguments.


# Example 1: Displays line for each age group, for years across the x axis and
# count of cases along y axis, adjust rotation of x axis labels, apply a
# horizontal line, reversed labels, dashed line type, larger line
# width, set specific x axis breaks.

line_chart(df = age_sex, x = "variable", y = "value", group_var = "Age.group",
           h_line = 150, x_label_angle = 45, line_size = 3,
           x_axis_breaks = 10,  x_labels_reverse = 'y', line_type = 'dashed')


# Example 2: Shows line depicting rates with years across the x axis, y axis
# label provided, line type adjusted, lower and upper values passed along with
# error bars selected, caption text provided.

line_chart(df = rate, x = "year", y = "rate", x_label = 'year',
           y_label = 'rate', line_type = 'solid', lower = "lower.ci",
           upper = "upper.ci", ci = 'e', cap_text = 'Data source: xxx')


# Example 3: Shows line depicting rates with years across the x axis, y axis
# label provided, lower and upper values passed along with ribbon selected.

line_chart(df = rate, x = "year", y = "rate", x_label = 'year', y_label = 'rate',
                   lower = "lower.ci", upper = "upper.ci", ci = 'w')

# Example 4: Displays line for each local authority name, with years across
# the x axis and count of cases along y axis, x and y labels provided, line
# type adjusted, percent symbol add to x axis labels and grid lines removed,
# reduce line size #' and add points.

line_chart(df = la, x = "year", y = "Counts", group_var = "laname",
           x_label = 'year', y_label = 'rate', line_type = 'solid',
           percent = 'y', remove_gridlines = 'y', line_size = .5,
           add_points = 'y')


}
