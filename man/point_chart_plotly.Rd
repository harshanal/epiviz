% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point_chart_plotly.R
\name{point_chart_plotly}
\alias{point_chart_plotly}
\title{point_chart}
\usage{
point_chart_plotly(
  dynamic = FALSE,
  base = NULL,
  params = list(df = NULL, x = NULL, y = NULL, point_shape = "triangle", point_size =
    1.5, point_colours = "blue", point_labels = NULL, point_labels_hjust = 0,
    point_labels_vjust = 0, point_labels_nudge_x = 0, point_labels_nudge_y = 0, group_var
    = NULL, ci = NULL, ci_upper = NULL, ci_lower = NULL, ci_legend = FALSE,
    ci_legend_title = "Confidence interval", ci_colours = "red", errorbar_width = NULL,
    y_sec_axis = FALSE, y_sec_axis_no_shift = FALSE, chart_title = NULL, chart_title_size
    = 13, chart_title_colour = "black", 
     chart_footer = NULL, chart_footer_size =
    12, chart_footer_colour = "black", x_axis_title = NULL, y_axis_title = NULL,
    x_axis_label_angle = NULL, y_axis_label_angle = NULL, x_axis_reverse = FALSE,
    y_percent = FALSE, x_limit_min = NULL, x_limit_max = NULL, y_limit_min = NULL,
    y_limit_max = NULL, x_axis_break_labels = NULL, y_axis_break_labels = NULL,
    x_axis_n_breaks = NULL, y_axis_n_breaks = NULL, x_axis_date_breaks = NULL, st_theme =
    NULL, show_gridlines = FALSE, show_axislines = TRUE, legend_title = "", 
    
    legend_pos = "bottom", point_size_legend = TRUE, point_size_legend_title = "", hline
    = NULL, hline_colour = "black", hline_width = 0.5, hline_type = "dashed", hline_label
    = NULL, hline_label_colour = "black")
)
}
\arguments{
\item{dynamic}{Logical indicating whether to produce a dynamic (plotly) output.
Default is \code{FALSE}, which will return a static ggplot output.}

\item{base}{A base ggplot or plotly object that the output will be applied to. If
\code{dynamic = TRUE} then \code{base} must be a plotly object, and if \code{dynamic = FALSE}
then \code{base} must be a ggplot object.}

\item{params}{A named list containing arguements used to create the plot.
' \describe{
\item{df}{A data frame containing values used to create the point chart.}
\item{x}{Name of the variable in df used to populate the x-axis.}
\item{y}{Name of the variable in df used to populate the y-axis.}
\item{point_shape}{Shape of the plotted points. Permitted values of c('circle',
'triangle','square','plus','square cross','asterisk','diamond')}. When \code{group_var}
is provided, point shapes will be automatically assigned based on group.
\item{point_size} {########## EXPAND #################}
\item{point_colours} {Colour of the points to be plotted (default = "blue").
When \code{group_var} is provided, \code{point_colours} can be set as a
character vector to define colours for each group.}
\item{point_labels} {Name of a variable in df containing text labels to plot against
each point on the chart. If not provided the no labels will be applied. If \code{dynamic
   = TRUE} then \code{point_labels} will be applied as hover-labels, and \code{point_labels}
will accept html to format the output labels.}
\item{point_labels_hjust} {Horizontal justification of \code{point_labels} on output chart
when \code{dynamic = FALSE}. Permitted values = c(0, 0.5, 1) for left, centre,
and right justified respectively.}
\item{point_labels_vjust} {Vertical justification of \code{point_labels} on output chart
when \code{dynamic = FALSE}. Permitted values = c(0, 0.5, 1) for bottom, middle,
and top justified respectively.}
\item{point_labels_nudge_x} {Horizontal adjustment to nudge code{point_labels} by
when \code{dynamic = FALSE}. Useful for offsetting text from points.}
\item{point_labels_nudge_y} {Vertical adjustment to nudge code{point_labels} by
when \code{dynamic = FALSE}. Useful for offsetting text from points.}
\item{group_var}{Name of the variable in df used to define separate groups of points
in the chart.}
\item{ci} {Confidence interval. If \code{ci = "errorbar"} then confidence intervals be
be plotted with each point as errorbars, and if \code{ci = "ribbon"} then confidence
intervals will be added to the chart as a ribbon plot for each group. If \code{ci} is
provided, then \code{ci_upper} and \code{ci_lower} must also be provided.}
\item{ci_upper} {Name of the variable in df used as the upper confidence limit for
each point. Mandatory when \code{ci} is provided.}
\item{ci_lower} {Name of the variable in df used as the lower confidence limit for
each point. Mandatory when \code{ci} is provided.}
\item{ci_legend} {Logical indicating whether a separate legend should be included
in the chart for confidence interval parameters. Only applies when \code{group_var}
is provided. Defaults to \code{FALSE}.}
\item{ci_legend_title} {Text to use as title for separate legend when \code{ci_legend = TRUE}.}
\item{ci_colours} {Colour(s) used for plotting confidence intervals. When \code{ci =
   "errorbar"} this will determine the colour of the plotted errorbars, when \code{ci =
   "ribbon"} this will determine the colour of the plotted ribbons.}
\item{errorbar_width} {Horizontal width of the plotted error bars when \code{ci =
   "errorbar"}.}
\item{y_sec_axis} {Logical to indicate whether data should be plotted on the
secondary (right) y-axis. Default = \code{FALSE}.}
\item{y_sec_axis_no_shift} {Forces the secondary y-axis scale to begin at 0. Default =
\code{TRUE}.}
\item{chart_title} {Text to use as chart title.}
\item{chart_title_size} {Font size of chart title.}
\item{chart_title_colour} {Font colour of chart title.}
\item{chart_footer} {Text to use as chart footer.}
\item{chart_footer_size} {Font size of chart footer.}
\item{chart_footer_colour} {Font colour of chart footer.}
\item{x_axis_title} {Text used for x-axis title. Defaults to name of x-variable if
not stated.}
\item{y_axis_title} {Text used for y-axis title. Defaults to name of y-variable if
not stated.}
\item{x_axis_label_angle} {Angle for x-axis label text.}
\item{y_axis_label_angle} {Angle for y-axis label text.}
\item{x_axis_reverse} {Reverses x-axis scale if \code{x_axis_reverse = TRUE}.}
\item{y_percent} {Converts y-axis to percentage scale if \code{y_percent = TRUE}.}
\item{x_limit_min} {Lower limit for the x-axis. Default used if not provided.}
\item{x_limit_max} {Upper limit for the x-axis. Default used if not provided.}
\item{y_limit_min} {Lower limit for the y-axis. Default used if not provided.}
\item{y_limit_max} {Upper limit for the y-axis. Default used if not provided.}
\item{x_axis_break_labels} {Vector of values to use for x-axis breaks. Defaults used if not provided.}
\item{y_axis_break_labels} {Vector of values to use for y-axis breaks. Defaults used if not provided.}
\item{x_axis_n_breaks} {Number of breaks for the x-axis. Cannot be provided
if \code{x_axis_break_labels} is provided.}
\item{y_axis_n_breaks} {Number of breaks for the y-axis. Cannot be used
if \code{y_axis_break_labels} is also provided.}
\item{x_axis_date_breaks} {A string giving the distance between breaks like "2 weeks", or "10 years".
Valid specifications are 'sec', 'min', 'hour', 'day', 'week', 'month' or 'year', optionally followed
by 's'. Matches ggplot scale_date() conventions (see https://ggplot2.tidyverse.org/reference/scale_date.html).
Cannot be used if \code{y_axis_break_labels} is also provided.}
\item{st_theme} {Name of a ggplot theme to be applied to a static plot. Can only be provided
when \code{dynamic = FALSE}}
\item{show_gridlines} {Logical to show chart gridlines. Default = \code{TRUE}.}
\item{show_axislines} {Logical to show chart axis lines. Default = \code{TRUE}.}
\item{legend_title} {Text used for legend title.}
\item{legend_pos} {Position of the legend. Permitted values = c("top","bootom","right","left")}
\item{point_size_legend} {Include a legend for \code{point_size}. Default = \code{TRUE}}
\item{point_size_legend_title} {Text used for point legend title.}
\item{hline} {Adds horizontal line across the chart at the corresponding y-value. Multiple
values may be provided as a vector to add multiple horizontal lines.}
\item{hline_colour} {Colour of the horizontal lines if \code{hline} is provided. A vector of colours
can be provided to colour individual hlines if multiple hlines have been provided.}
\item{hline_width} {Numerical width of the horizontal lines if \code{hline} is provided. A vector of numerical widths
can be provided for individual hlines if multiple hlines have been provided.}
\item{hline_type} {Line style of the horizontal lines if \code{hline} is provided. A vector of line styles
can be provided to style hlines if multiple hlines have been provided. Permitted values = c("solid", "dotted",
"dashed", "longdash", "dotdash").}
\item{hline_label} {Text to label the horizontal lines if \code{hline} is provided. A vector of text strings
can be provided to label individual hlines if multiple hlines have been provided.}
\item{hline_label_colour} {Colour of the horizontal line labels if \code{hline_labels} is provided.
A vector of colours can be provided to colour individual hline_labels if multiple hline_labels have been provided.}

}}
}
\value{
A ggplot or plotly object.
}
\description{
A function for producing either static (ggplot) or dynamic (plotly)
point charts.
}
\examples{

# This example will plot the points on the secondary y-axis with error bars and
# labels showing
# the plotted values that are vertically adjusted from the plotted points
\dontrun{
point_chart(df = plot_df, x = "age", y = "value", ci = "e", ci_upper = "ci_uppercl",
ci_lower = "ci_lowercl", group_var = "ukborn", y_axis = "y2", y_axis_title = "Value",
labels = "value", vjust = -3.5)
}

}
